public class [name] extends BorderPane
{
	private RootView parent;
	private double width;
	private double height;
	public [name](final RootView parent)
	{
		super();
		
		// parent setup
		this.parent = parent;
		this.parent.widthProperty().addListener(new ChangeListener<Number>()
		{
			@Override
			public void changed(final ObservableValue<? extends Number> value, final Number oldValue, final Number newValue)
			{
				updateSizes();
			}
		});
		this.parent.heightProperty().addListener(new ChangeListener<Number>()
		{
			@Override
			public void changed(final ObservableValue<? extends Number> value, final Number oldValue, final Number newValue)
			{
				updateSizes();
			}
		});
	}
	
	public void updateSizes()
	{
		this.width = parent.getCalcWidth();
		this.height = parent.getCalcHeight() * 0.75;
		this.setMinWidth(width);
		this.setMinHeight(height);
		this.setMaxWidth(width);
		this.setMaxHeight(height);
	}
}
